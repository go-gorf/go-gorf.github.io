{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Golang Rest Framework (Gorf)","text":"<p>Django inspired Rest Framework for Golang.</p>"},{"location":"#vision","title":"Vision","text":"<p>Introducing Gorf, the Golang REST API framework that empowers developers to easily create and reuse modular apps.  Inspired by the simplicity and flexibility of Python Django, Gorf utilizes the full MVC architecture, providing dedicated model, URL, and view files for effortless understanding. Gorf's plug and play app concept enables infinite  scalability and customization, making Gorf the go-to solution for anyone looking to kickstart a new project in Golang. Join our community and contribute your ideas and innovations to build a framework that streamlines the development process for all.</p> <p>Features</p> <ul> <li>Generic</li> <li>Simplicity</li> <li>Based on known architecture</li> <li>Reusability</li> <li>Support for apps</li> <li>Custom database backends</li> <li>More feature work in progress</li> </ul>"},{"location":"#installation","title":"Installation","text":"<p><pre><code>go get github.com/go-gorf/gorf\n</code></pre> Install gorf auth app <pre><code>go get github.com/go-gorf/auth\n</code></pre></p>"},{"location":"#tutorial","title":"Tutorial","text":"<p>Firstly, Create a new main package with following code</p> <pre><code>package main\nimport (\n\"log\"\n)\nfunc main() {\nr := BootstrapRouter()\nerr := r.Run()\nif err != nil {\nlog.Fatal(\"Unable to create the gin server\")\n} // listen and serve on 0.0.0.0:8080 (for windows \"localhost:8080\")\n}\n</code></pre>"},{"location":"#settingsgo","title":"settings.go","text":"<p>Next, Create a settings.go file in the main package with the following code snippet</p> settings.go<pre><code>package main\nimport (\n\"github.com/gin-gonic/gin\"\n\"github.com/go-gorf/auth\"\n\"github.com/go-gorf/gorf\"\n)\n// add all the apps\nvar apps = []gorf.GorfApp{\n&amp;auth.AuthApp,\n}\nfunc LoadSettings() {\n// jwt secret key\ngorf.Settings.SecretKey = \"GOo8Rs8ht7qdxv6uUAjkQuopRGnql2zWJu08YleBx6pEv0cQ09a\"\ngorf.Settings.DbConf = &amp;gorf.SqliteBackend{\nName: \"db.sqlite\",\n}\n}\n// bootstrap server\nfunc BootstrapRouter() *gin.Engine {\ngorf.Apps = append(apps)\nLoadSettings()\ngorf.InitializeDatabase()\ngorf.SetupApps()\nr := gin.Default()\ngorf.RegisterApps(r)\nreturn r\n}\n</code></pre>"},{"location":"#write-your-own-apps","title":"Write your own apps","text":"<p>Create a new package named \"hello\"</p> <p>add app.go file</p> <pre><code>package hello\nimport (\n\"github.com/go-gorf/gorf\"\n)\nfunc setup() error {\n// Add setup here\nreturn nil\n}\nvar HelloApp = gorf.GorfBaseApp{\nName:         \"Hello\",\nRouteHandler: Urls,\nSetUpHandler: setup,\n}\n</code></pre> <p>add urls.go file</p> <pre><code>package hello\nimport \"github.com/gin-gonic/gin\"\nfunc Urls(r *gin.Engine) {\nr.POST(\"/hello\", Hello)\n}\n</code></pre> <p>add views.go file</p> <pre><code>package hello\nimport (\n\"github.com/gin-gonic/gin\"\n\"net/http\"\n)\nfunc Hello(ctx *gin.Context) {\nctx.JSON(http.StatusOK, gin.H{\n\"message\": \"Hello world\",\n})\n}\n</code></pre>"},{"location":"#check-the-gorf-project-template","title":"Check the Gorf project template","text":"<p>https://github.com/go-gorf/template</p>"},{"location":"development/","title":"Developer Guide","text":""},{"location":"development/#development","title":"Development","text":"<p>All contributions are welcome. Some options to support the project includes,</p> <ul> <li>Add new features to the project</li> <li>Improve the docs</li> <li>Add new gorf apps that others can reuse, every new apps shoupld reside inside a repo for easy maintenance,  request for individual repo creation in discussions.</li> <li>suggest more ideas</li> </ul> <p>Recommended way is to use the go mode edit to replace deps with local dev version</p> <p><pre><code>go mod edit -replace github.com/go-gorf/auth=../auth\n</code></pre> Or</p> <pre><code>replace github.com/go-gorf/gorf =&gt; ../gorf\nreplace github.com/go-gorf/auth =&gt; ../auth\n</code></pre>"}]}